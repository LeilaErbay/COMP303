{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11140\viewh9200\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 objective: explanation of Sequence diagram\
\
Process:\
1. someone sends a message calling transmitMsg(msg:String) from Sender object\
2. Sender waits for the Network to be quiet in a while loop by calling isQuiet from the network and receiving a response (boolean)\
\
2a. Meanwhile the Receiver continually calls the Network\'92s method containsPacket() to see if the network has a packet it will be sending and the Network sends a boolean back to the Receiver\
3. (not in assignment description) I assumed the sender will turn the string message into a packet thus Sender calls createPacket inside itself\
\
4. Sender calls Network\'92s sendPacket( :Packet) and ships the packet to the network\
4a. At this point, Receiver has been told that the Network has a packet it will attempt to send\
5. Network calls Receiver\'92s receivePacket( :Packet) and ships the packet\
5a. the Network sends a success back to Sender to signal that it\'92s routed the packet\
6. If the Network successfully sent the message, the Sender sets a timer\
7. Meanwhile, (not in description) Receiver checks if the packet is valid\
\
7a. if packet is valid, the Receiver saves the packet\
8. Receiver checks if the Network is quiet and receives a boolean if the Network is quiet or not\
9. Receiver sends a confirmation packet back to the network in this case\
\
7b. If packet is not valid, the Receiver does not save the packet \
8. Receiver waits for the Network to be quiet\
9. Receiver then sends an error packet\
\
10. Network returns whatever kind of packet that was returned by the Receiver to the Sender\
11. Sender has many conditions based on the timer and the packet\
11a. if the time hasn\'92t completed and the type of the packet isn\'92t an error packet, then Sender ends its timer and returns true to the user\
11b. if the return packet is an error packet and the timer is not yet over, the Sender ends the timer and returns false to the user\
11c. if the timer is done, then the Sender increments its counter (at most 3 strikes) and the program loops over and repeats the process\
11d. if the counter hits 3 then the process has already happened 3 times so the Sender sends a false to the user and the process is over \
\
***There were some unclear parts in the description so I took those into my own interpretation of the problem: \
	\'97 The Sender turns the message into a Packet before sending it to the Network\
	\'97 Network telling the Sender if it succeeds in routing the packet to the Receiver\
	\'97 I decided that the Receiver checks the validity of the packet because it seems the Network 	is just a middle man so if the packet is a bad packet, possibly a virus, the Receiver would not 	want to save this kind of packet thus the Receiver returns either a Confirmation Packet or an 	Error Packet\
}