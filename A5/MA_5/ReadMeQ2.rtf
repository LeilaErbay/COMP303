{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww13000\viewh10660\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Abstract Class\
	- Item\
	- Mobile extends Item\
\
Concrete Class\
	- Immoveable only extends Item\'cd\
	- Autonomous extends Mobile\
	- Moveable extends Mobile\
\
	- World\
	- Simulation\
\
Design Technique: Inheritance, Abstract Classes\
Design Pattern: \
\
	- Autonomous,  adding extra functionality to Mobile ~~ Decorator Pattern\
\
	- World creates a 2D array of Items, it is passed the items that are instantiated elsewhere,\
		and if the Item is autonomous or is a Moveable that is bumped they move\
		(World calls bump of the Mobile objects)\
		~~ COMPOSITE\
\
	- World ~~ SINGLETON\
\
	- Simulation allows for randomization in the placement of items\
	\
	- World = Model, View	~~ MVC\
	- Simulation = Controller\
\
	- World = Subject \
	- Autonomous, Moveable = Concrete Observers	~~ OBSERVER PATTERN\
	- Observer = Mobile\
\
To use/set the application:\
Inside Simulation buildWorld,\
	- setXBound(int x), setYBound(int y) are called		(these are the dimensions of the grid)\
	- fillWorldRandomly is called 3 times:\
		once for Anonymous objects\
		once for Moveable objects\
		once for Immoveable objects\
\
		- the second parameter allows you to set the number of the certain object you would like to add to the world}